/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";

export type SuggestRequest = {
  xSessionId: string;
  /**
   * The OAS summary and diagnostics to use for the suggestion.
   */
  suggestRequestBody: shared.SuggestRequestBody;
};

/** @internal */
export const SuggestRequest$inboundSchema: z.ZodType<
  SuggestRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  "x-session-id": z.string(),
  SuggestRequestBody: shared.SuggestRequestBody$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "x-session-id": "xSessionId",
    "SuggestRequestBody": "suggestRequestBody",
  });
});

/** @internal */
export type SuggestRequest$Outbound = {
  "x-session-id": string;
  SuggestRequestBody: shared.SuggestRequestBody$Outbound;
};

/** @internal */
export const SuggestRequest$outboundSchema: z.ZodType<
  SuggestRequest$Outbound,
  z.ZodTypeDef,
  SuggestRequest
> = z.object({
  xSessionId: z.string(),
  suggestRequestBody: shared.SuggestRequestBody$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    xSessionId: "x-session-id",
    suggestRequestBody: "SuggestRequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SuggestRequest$ {
  /** @deprecated use `SuggestRequest$inboundSchema` instead. */
  export const inboundSchema = SuggestRequest$inboundSchema;
  /** @deprecated use `SuggestRequest$outboundSchema` instead. */
  export const outboundSchema = SuggestRequest$outboundSchema;
  /** @deprecated use `SuggestRequest$Outbound` instead. */
  export type Outbound = SuggestRequest$Outbound;
}
