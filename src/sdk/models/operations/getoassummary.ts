/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";
import * as z from "zod";

export type GetOASSummaryRequest = {
    namespaceName: string;
    revisionReference: string;
};

export type GetOASSummaryResponse = shared.ErrorT | shared.OASSummary;

/** @internal */
export const GetOASSummaryRequest$inboundSchema: z.ZodType<
    GetOASSummaryRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        namespace_name: z.string(),
        revision_reference: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            namespace_name: "namespaceName",
            revision_reference: "revisionReference",
        });
    });

/** @internal */
export type GetOASSummaryRequest$Outbound = {
    namespace_name: string;
    revision_reference: string;
};

/** @internal */
export const GetOASSummaryRequest$outboundSchema: z.ZodType<
    GetOASSummaryRequest$Outbound,
    z.ZodTypeDef,
    GetOASSummaryRequest
> = z
    .object({
        namespaceName: z.string(),
        revisionReference: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            namespaceName: "namespace_name",
            revisionReference: "revision_reference",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetOASSummaryRequest$ {
    /** @deprecated use `GetOASSummaryRequest$inboundSchema` instead. */
    export const inboundSchema = GetOASSummaryRequest$inboundSchema;
    /** @deprecated use `GetOASSummaryRequest$outboundSchema` instead. */
    export const outboundSchema = GetOASSummaryRequest$outboundSchema;
    /** @deprecated use `GetOASSummaryRequest$Outbound` instead. */
    export type Outbound = GetOASSummaryRequest$Outbound;
}

/** @internal */
export const GetOASSummaryResponse$inboundSchema: z.ZodType<
    GetOASSummaryResponse,
    z.ZodTypeDef,
    unknown
> = z.union([shared.ErrorT$inboundSchema, shared.OASSummary$inboundSchema]);

/** @internal */
export type GetOASSummaryResponse$Outbound = shared.ErrorT$Outbound | shared.OASSummary$Outbound;

/** @internal */
export const GetOASSummaryResponse$outboundSchema: z.ZodType<
    GetOASSummaryResponse$Outbound,
    z.ZodTypeDef,
    GetOASSummaryResponse
> = z.union([shared.ErrorT$outboundSchema, shared.OASSummary$outboundSchema]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetOASSummaryResponse$ {
    /** @deprecated use `GetOASSummaryResponse$inboundSchema` instead. */
    export const inboundSchema = GetOASSummaryResponse$inboundSchema;
    /** @deprecated use `GetOASSummaryResponse$outboundSchema` instead. */
    export const outboundSchema = GetOASSummaryResponse$outboundSchema;
    /** @deprecated use `GetOASSummaryResponse$Outbound` instead. */
    export type Outbound = GetOASSummaryResponse$Outbound;
}
