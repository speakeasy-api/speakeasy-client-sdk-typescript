/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";

export type GetBillingAddOnsResponse =
  | shared.OrganizationBillingAddOnResponse
  | shared.ErrorT;

/** @internal */
export const GetBillingAddOnsResponse$inboundSchema: z.ZodType<
  GetBillingAddOnsResponse,
  z.ZodTypeDef,
  unknown
> = z.union([
  shared.OrganizationBillingAddOnResponse$inboundSchema,
  shared.ErrorT$inboundSchema,
]);

/** @internal */
export type GetBillingAddOnsResponse$Outbound =
  | shared.OrganizationBillingAddOnResponse$Outbound
  | shared.ErrorT$Outbound;

/** @internal */
export const GetBillingAddOnsResponse$outboundSchema: z.ZodType<
  GetBillingAddOnsResponse$Outbound,
  z.ZodTypeDef,
  GetBillingAddOnsResponse
> = z.union([
  shared.OrganizationBillingAddOnResponse$outboundSchema,
  shared.ErrorT$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetBillingAddOnsResponse$ {
  /** @deprecated use `GetBillingAddOnsResponse$inboundSchema` instead. */
  export const inboundSchema = GetBillingAddOnsResponse$inboundSchema;
  /** @deprecated use `GetBillingAddOnsResponse$outboundSchema` instead. */
  export const outboundSchema = GetBillingAddOnsResponse$outboundSchema;
  /** @deprecated use `GetBillingAddOnsResponse$Outbound` instead. */
  export type Outbound = GetBillingAddOnsResponse$Outbound;
}

export function getBillingAddOnsResponseToJSON(
  getBillingAddOnsResponse: GetBillingAddOnsResponse,
): string {
  return JSON.stringify(
    GetBillingAddOnsResponse$outboundSchema.parse(getBillingAddOnsResponse),
  );
}

export function getBillingAddOnsResponseFromJSON(
  jsonString: string,
): SafeParseResult<GetBillingAddOnsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetBillingAddOnsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetBillingAddOnsResponse' from JSON`,
  );
}
