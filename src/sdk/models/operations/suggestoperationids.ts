/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

export enum DepthStyle {
    Original = "original",
    Flat = "flat",
    Nested = "nested",
    Deep = "deep",
}

export enum Style {
    Standardize = "standardize",
    Resource = "resource",
}

export class Opts extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "depth_style" })
    depthStyle?: DepthStyle;

    @SpeakeasyMetadata()
    @Expose({ name: "style" })
    style?: Style;
}

export class Schema extends SpeakeasyBase {
    @SpeakeasyMetadata({ data: "multipart_form, content=true" })
    content: Uint8Array;

    @SpeakeasyMetadata({ data: "multipart_form, name=schema" })
    fileName: string;
}

/**
 * The schema file to upload provided as a multipart/form-data file segment.
 */
export class SuggestOperationIDsRequestBody extends SpeakeasyBase {
    @SpeakeasyMetadata({ data: "multipart_form, name=opts;json=true" })
    opts?: Opts;

    @SpeakeasyMetadata({ data: "multipart_form, file=true" })
    schema: Schema;
}

/**
 * OK
 */
export class SuggestOperationIDsSuggestion extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "operation_ids" })
    operationIds: Record<string, string[]>;
}

export class SuggestOperationIDsResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse: AxiosResponse;

    /**
     * OK
     */
    @SpeakeasyMetadata()
    suggestion?: SuggestOperationIDsSuggestion;
}
