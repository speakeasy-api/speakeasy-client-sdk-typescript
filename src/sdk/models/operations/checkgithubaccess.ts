/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type CheckGithubAccessRequest = {
  org: string;
  repo: string;
};

/** @internal */
export const CheckGithubAccessRequest$inboundSchema: z.ZodType<
  CheckGithubAccessRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  org: z.string(),
  repo: z.string(),
});

/** @internal */
export type CheckGithubAccessRequest$Outbound = {
  org: string;
  repo: string;
};

/** @internal */
export const CheckGithubAccessRequest$outboundSchema: z.ZodType<
  CheckGithubAccessRequest$Outbound,
  z.ZodTypeDef,
  CheckGithubAccessRequest
> = z.object({
  org: z.string(),
  repo: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CheckGithubAccessRequest$ {
  /** @deprecated use `CheckGithubAccessRequest$inboundSchema` instead. */
  export const inboundSchema = CheckGithubAccessRequest$inboundSchema;
  /** @deprecated use `CheckGithubAccessRequest$outboundSchema` instead. */
  export const outboundSchema = CheckGithubAccessRequest$outboundSchema;
  /** @deprecated use `CheckGithubAccessRequest$Outbound` instead. */
  export type Outbound = CheckGithubAccessRequest$Outbound;
}
