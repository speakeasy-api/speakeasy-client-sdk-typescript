/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";
import * as z from "zod";

export type SuggestOperationIDsRegistryRequest = {
    xSessionId: string;
    namespaceName: string;
    /**
     * Tag or digest
     */
    revisionReference: string;
    /**
     * Max number of suggestions to request
     */
    limit?: number | undefined;
    /**
     * The schema file to upload provided as a multipart/form-data file segment.
     */
    suggestOperationIDsOpts?: shared.SuggestOperationIDsOpts | undefined;
};

/** @internal */
export const SuggestOperationIDsRegistryRequest$inboundSchema: z.ZodType<
    SuggestOperationIDsRegistryRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        "x-session-id": z.string(),
        namespace_name: z.string(),
        revision_reference: z.string(),
        limit: z.number().optional(),
        SuggestOperationIDsOpts: shared.SuggestOperationIDsOpts$inboundSchema.optional(),
    })
    .transform((v) => {
        return remap$(v, {
            "x-session-id": "xSessionId",
            namespace_name: "namespaceName",
            revision_reference: "revisionReference",
            SuggestOperationIDsOpts: "suggestOperationIDsOpts",
        });
    });

/** @internal */
export type SuggestOperationIDsRegistryRequest$Outbound = {
    "x-session-id": string;
    namespace_name: string;
    revision_reference: string;
    limit?: number | undefined;
    SuggestOperationIDsOpts?: shared.SuggestOperationIDsOpts$Outbound | undefined;
};

/** @internal */
export const SuggestOperationIDsRegistryRequest$outboundSchema: z.ZodType<
    SuggestOperationIDsRegistryRequest$Outbound,
    z.ZodTypeDef,
    SuggestOperationIDsRegistryRequest
> = z
    .object({
        xSessionId: z.string(),
        namespaceName: z.string(),
        revisionReference: z.string(),
        limit: z.number().optional(),
        suggestOperationIDsOpts: shared.SuggestOperationIDsOpts$outboundSchema.optional(),
    })
    .transform((v) => {
        return remap$(v, {
            xSessionId: "x-session-id",
            namespaceName: "namespace_name",
            revisionReference: "revision_reference",
            suggestOperationIDsOpts: "SuggestOperationIDsOpts",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SuggestOperationIDsRegistryRequest$ {
    /** @deprecated use `SuggestOperationIDsRegistryRequest$inboundSchema` instead. */
    export const inboundSchema = SuggestOperationIDsRegistryRequest$inboundSchema;
    /** @deprecated use `SuggestOperationIDsRegistryRequest$outboundSchema` instead. */
    export const outboundSchema = SuggestOperationIDsRegistryRequest$outboundSchema;
    /** @deprecated use `SuggestOperationIDsRegistryRequest$Outbound` instead. */
    export type Outbound = SuggestOperationIDsRegistryRequest$Outbound;
}
