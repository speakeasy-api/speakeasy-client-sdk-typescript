/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";

export type CreateWorkspaceTokenRequest = {
  /**
   * Unique identifier of the workspace.
   */
  workspaceId: string;
  workspaceToken: shared.WorkspaceToken;
};

/** @internal */
export const CreateWorkspaceTokenRequest$inboundSchema: z.ZodType<
  CreateWorkspaceTokenRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  workspace_id: z.string(),
  WorkspaceToken: shared.WorkspaceToken$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "workspace_id": "workspaceId",
    "WorkspaceToken": "workspaceToken",
  });
});

/** @internal */
export type CreateWorkspaceTokenRequest$Outbound = {
  workspace_id: string;
  WorkspaceToken: shared.WorkspaceToken$Outbound;
};

/** @internal */
export const CreateWorkspaceTokenRequest$outboundSchema: z.ZodType<
  CreateWorkspaceTokenRequest$Outbound,
  z.ZodTypeDef,
  CreateWorkspaceTokenRequest
> = z.object({
  workspaceId: z.string(),
  workspaceToken: shared.WorkspaceToken$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    workspaceId: "workspace_id",
    workspaceToken: "WorkspaceToken",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateWorkspaceTokenRequest$ {
  /** @deprecated use `CreateWorkspaceTokenRequest$inboundSchema` instead. */
  export const inboundSchema = CreateWorkspaceTokenRequest$inboundSchema;
  /** @deprecated use `CreateWorkspaceTokenRequest$outboundSchema` instead. */
  export const outboundSchema = CreateWorkspaceTokenRequest$outboundSchema;
  /** @deprecated use `CreateWorkspaceTokenRequest$Outbound` instead. */
  export type Outbound = CreateWorkspaceTokenRequest$Outbound;
}
