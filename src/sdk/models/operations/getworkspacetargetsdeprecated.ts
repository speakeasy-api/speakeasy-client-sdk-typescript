/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetWorkspaceTargetsDeprecatedGlobals = {
  workspaceId?: string | undefined;
};

export type GetWorkspaceTargetsDeprecatedRequest = {
  /**
   * Unique identifier of the workspace.
   */
  workspaceId?: string | undefined;
  /**
   * Filter to only return targets with events created after this timestamp
   */
  afterLastEventCreatedAt?: Date | undefined;
};

/** @internal */
export const GetWorkspaceTargetsDeprecatedGlobals$inboundSchema: z.ZodType<
  GetWorkspaceTargetsDeprecatedGlobals,
  z.ZodTypeDef,
  unknown
> = z.object({
  workspace_id: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    "workspace_id": "workspaceId",
  });
});

/** @internal */
export type GetWorkspaceTargetsDeprecatedGlobals$Outbound = {
  workspace_id?: string | undefined;
};

/** @internal */
export const GetWorkspaceTargetsDeprecatedGlobals$outboundSchema: z.ZodType<
  GetWorkspaceTargetsDeprecatedGlobals$Outbound,
  z.ZodTypeDef,
  GetWorkspaceTargetsDeprecatedGlobals
> = z.object({
  workspaceId: z.string().optional(),
}).transform((v) => {
  return remap$(v, {
    workspaceId: "workspace_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetWorkspaceTargetsDeprecatedGlobals$ {
  /** @deprecated use `GetWorkspaceTargetsDeprecatedGlobals$inboundSchema` instead. */
  export const inboundSchema =
    GetWorkspaceTargetsDeprecatedGlobals$inboundSchema;
  /** @deprecated use `GetWorkspaceTargetsDeprecatedGlobals$outboundSchema` instead. */
  export const outboundSchema =
    GetWorkspaceTargetsDeprecatedGlobals$outboundSchema;
  /** @deprecated use `GetWorkspaceTargetsDeprecatedGlobals$Outbound` instead. */
  export type Outbound = GetWorkspaceTargetsDeprecatedGlobals$Outbound;
}

export function getWorkspaceTargetsDeprecatedGlobalsToJSON(
  getWorkspaceTargetsDeprecatedGlobals: GetWorkspaceTargetsDeprecatedGlobals,
): string {
  return JSON.stringify(
    GetWorkspaceTargetsDeprecatedGlobals$outboundSchema.parse(
      getWorkspaceTargetsDeprecatedGlobals,
    ),
  );
}

export function getWorkspaceTargetsDeprecatedGlobalsFromJSON(
  jsonString: string,
): SafeParseResult<GetWorkspaceTargetsDeprecatedGlobals, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetWorkspaceTargetsDeprecatedGlobals$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetWorkspaceTargetsDeprecatedGlobals' from JSON`,
  );
}

/** @internal */
export const GetWorkspaceTargetsDeprecatedRequest$inboundSchema: z.ZodType<
  GetWorkspaceTargetsDeprecatedRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  workspace_id: z.string().optional(),
  after_last_event_created_at: z.string().datetime({ offset: true }).transform(
    v => new Date(v)
  ).optional(),
}).transform((v) => {
  return remap$(v, {
    "workspace_id": "workspaceId",
    "after_last_event_created_at": "afterLastEventCreatedAt",
  });
});

/** @internal */
export type GetWorkspaceTargetsDeprecatedRequest$Outbound = {
  workspace_id?: string | undefined;
  after_last_event_created_at?: string | undefined;
};

/** @internal */
export const GetWorkspaceTargetsDeprecatedRequest$outboundSchema: z.ZodType<
  GetWorkspaceTargetsDeprecatedRequest$Outbound,
  z.ZodTypeDef,
  GetWorkspaceTargetsDeprecatedRequest
> = z.object({
  workspaceId: z.string().optional(),
  afterLastEventCreatedAt: z.date().transform(v => v.toISOString()).optional(),
}).transform((v) => {
  return remap$(v, {
    workspaceId: "workspace_id",
    afterLastEventCreatedAt: "after_last_event_created_at",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetWorkspaceTargetsDeprecatedRequest$ {
  /** @deprecated use `GetWorkspaceTargetsDeprecatedRequest$inboundSchema` instead. */
  export const inboundSchema =
    GetWorkspaceTargetsDeprecatedRequest$inboundSchema;
  /** @deprecated use `GetWorkspaceTargetsDeprecatedRequest$outboundSchema` instead. */
  export const outboundSchema =
    GetWorkspaceTargetsDeprecatedRequest$outboundSchema;
  /** @deprecated use `GetWorkspaceTargetsDeprecatedRequest$Outbound` instead. */
  export type Outbound = GetWorkspaceTargetsDeprecatedRequest$Outbound;
}

export function getWorkspaceTargetsDeprecatedRequestToJSON(
  getWorkspaceTargetsDeprecatedRequest: GetWorkspaceTargetsDeprecatedRequest,
): string {
  return JSON.stringify(
    GetWorkspaceTargetsDeprecatedRequest$outboundSchema.parse(
      getWorkspaceTargetsDeprecatedRequest,
    ),
  );
}

export function getWorkspaceTargetsDeprecatedRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetWorkspaceTargetsDeprecatedRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      GetWorkspaceTargetsDeprecatedRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetWorkspaceTargetsDeprecatedRequest' from JSON`,
  );
}
