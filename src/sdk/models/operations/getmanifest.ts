/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";

export type GetManifestRequest = {
  organizationSlug: string;
  workspaceSlug: string;
  namespaceName: string;
  /**
   * Tag or digest
   */
  revisionReference: string;
};

export type GetManifestResponse = shared.ErrorT | shared.Manifest;

/** @internal */
export const GetManifestRequest$inboundSchema: z.ZodType<
  GetManifestRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  organization_slug: z.string(),
  workspace_slug: z.string(),
  namespace_name: z.string(),
  revision_reference: z.string(),
}).transform((v) => {
  return remap$(v, {
    "organization_slug": "organizationSlug",
    "workspace_slug": "workspaceSlug",
    "namespace_name": "namespaceName",
    "revision_reference": "revisionReference",
  });
});

/** @internal */
export type GetManifestRequest$Outbound = {
  organization_slug: string;
  workspace_slug: string;
  namespace_name: string;
  revision_reference: string;
};

/** @internal */
export const GetManifestRequest$outboundSchema: z.ZodType<
  GetManifestRequest$Outbound,
  z.ZodTypeDef,
  GetManifestRequest
> = z.object({
  organizationSlug: z.string(),
  workspaceSlug: z.string(),
  namespaceName: z.string(),
  revisionReference: z.string(),
}).transform((v) => {
  return remap$(v, {
    organizationSlug: "organization_slug",
    workspaceSlug: "workspace_slug",
    namespaceName: "namespace_name",
    revisionReference: "revision_reference",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetManifestRequest$ {
  /** @deprecated use `GetManifestRequest$inboundSchema` instead. */
  export const inboundSchema = GetManifestRequest$inboundSchema;
  /** @deprecated use `GetManifestRequest$outboundSchema` instead. */
  export const outboundSchema = GetManifestRequest$outboundSchema;
  /** @deprecated use `GetManifestRequest$Outbound` instead. */
  export type Outbound = GetManifestRequest$Outbound;
}

/** @internal */
export const GetManifestResponse$inboundSchema: z.ZodType<
  GetManifestResponse,
  z.ZodTypeDef,
  unknown
> = z.union([shared.ErrorT$inboundSchema, shared.Manifest$inboundSchema]);

/** @internal */
export type GetManifestResponse$Outbound =
  | shared.ErrorT$Outbound
  | shared.Manifest$Outbound;

/** @internal */
export const GetManifestResponse$outboundSchema: z.ZodType<
  GetManifestResponse$Outbound,
  z.ZodTypeDef,
  GetManifestResponse
> = z.union([shared.ErrorT$outboundSchema, shared.Manifest$outboundSchema]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetManifestResponse$ {
  /** @deprecated use `GetManifestResponse$inboundSchema` instead. */
  export const inboundSchema = GetManifestResponse$inboundSchema;
  /** @deprecated use `GetManifestResponse$outboundSchema` instead. */
  export const outboundSchema = GetManifestResponse$outboundSchema;
  /** @deprecated use `GetManifestResponse$Outbound` instead. */
  export type Outbound = GetManifestResponse$Outbound;
}
