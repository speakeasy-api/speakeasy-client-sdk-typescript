/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";

export type GetWorkspaceTokensRequest = {
  /**
   * Unique identifier of the workspace.
   */
  workspaceId: string;
};

export type GetWorkspaceTokensResponse =
  | shared.ErrorT
  | Array<shared.WorkspaceToken>;

/** @internal */
export const GetWorkspaceTokensRequest$inboundSchema: z.ZodType<
  GetWorkspaceTokensRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  workspace_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "workspace_id": "workspaceId",
  });
});

/** @internal */
export type GetWorkspaceTokensRequest$Outbound = {
  workspace_id: string;
};

/** @internal */
export const GetWorkspaceTokensRequest$outboundSchema: z.ZodType<
  GetWorkspaceTokensRequest$Outbound,
  z.ZodTypeDef,
  GetWorkspaceTokensRequest
> = z.object({
  workspaceId: z.string(),
}).transform((v) => {
  return remap$(v, {
    workspaceId: "workspace_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetWorkspaceTokensRequest$ {
  /** @deprecated use `GetWorkspaceTokensRequest$inboundSchema` instead. */
  export const inboundSchema = GetWorkspaceTokensRequest$inboundSchema;
  /** @deprecated use `GetWorkspaceTokensRequest$outboundSchema` instead. */
  export const outboundSchema = GetWorkspaceTokensRequest$outboundSchema;
  /** @deprecated use `GetWorkspaceTokensRequest$Outbound` instead. */
  export type Outbound = GetWorkspaceTokensRequest$Outbound;
}

/** @internal */
export const GetWorkspaceTokensResponse$inboundSchema: z.ZodType<
  GetWorkspaceTokensResponse,
  z.ZodTypeDef,
  unknown
> = z.union([
  shared.ErrorT$inboundSchema,
  z.array(shared.WorkspaceToken$inboundSchema),
]);

/** @internal */
export type GetWorkspaceTokensResponse$Outbound =
  | shared.ErrorT$Outbound
  | Array<shared.WorkspaceToken$Outbound>;

/** @internal */
export const GetWorkspaceTokensResponse$outboundSchema: z.ZodType<
  GetWorkspaceTokensResponse$Outbound,
  z.ZodTypeDef,
  GetWorkspaceTokensResponse
> = z.union([
  shared.ErrorT$outboundSchema,
  z.array(shared.WorkspaceToken$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetWorkspaceTokensResponse$ {
  /** @deprecated use `GetWorkspaceTokensResponse$inboundSchema` instead. */
  export const inboundSchema = GetWorkspaceTokensResponse$inboundSchema;
  /** @deprecated use `GetWorkspaceTokensResponse$outboundSchema` instead. */
  export const outboundSchema = GetWorkspaceTokensResponse$outboundSchema;
  /** @deprecated use `GetWorkspaceTokensResponse$Outbound` instead. */
  export type Outbound = GetWorkspaceTokensResponse$Outbound;
}
