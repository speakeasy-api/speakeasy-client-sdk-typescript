/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import * as shared from "../shared/index.js";

export type FindApiEndpointRequest = {
  /**
   * The ID of the Api the ApiEndpoint belongs to.
   */
  apiID: string;
  /**
   * The version ID of the Api the ApiEndpoint belongs to.
   */
  versionID: string;
  /**
   * The displayName of the ApiEndpoint to find (set by operationId from OpenAPI schema).
   */
  displayName: string;
};

export type FindApiEndpointResponse = shared.ErrorT | shared.ApiEndpoint;

/** @internal */
export const FindApiEndpointRequest$inboundSchema: z.ZodType<
  FindApiEndpointRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  apiID: z.string(),
  versionID: z.string(),
  displayName: z.string(),
});

/** @internal */
export type FindApiEndpointRequest$Outbound = {
  apiID: string;
  versionID: string;
  displayName: string;
};

/** @internal */
export const FindApiEndpointRequest$outboundSchema: z.ZodType<
  FindApiEndpointRequest$Outbound,
  z.ZodTypeDef,
  FindApiEndpointRequest
> = z.object({
  apiID: z.string(),
  versionID: z.string(),
  displayName: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindApiEndpointRequest$ {
  /** @deprecated use `FindApiEndpointRequest$inboundSchema` instead. */
  export const inboundSchema = FindApiEndpointRequest$inboundSchema;
  /** @deprecated use `FindApiEndpointRequest$outboundSchema` instead. */
  export const outboundSchema = FindApiEndpointRequest$outboundSchema;
  /** @deprecated use `FindApiEndpointRequest$Outbound` instead. */
  export type Outbound = FindApiEndpointRequest$Outbound;
}

/** @internal */
export const FindApiEndpointResponse$inboundSchema: z.ZodType<
  FindApiEndpointResponse,
  z.ZodTypeDef,
  unknown
> = z.union([shared.ErrorT$inboundSchema, shared.ApiEndpoint$inboundSchema]);

/** @internal */
export type FindApiEndpointResponse$Outbound =
  | shared.ErrorT$Outbound
  | shared.ApiEndpoint$Outbound;

/** @internal */
export const FindApiEndpointResponse$outboundSchema: z.ZodType<
  FindApiEndpointResponse$Outbound,
  z.ZodTypeDef,
  FindApiEndpointResponse
> = z.union([shared.ErrorT$outboundSchema, shared.ApiEndpoint$outboundSchema]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindApiEndpointResponse$ {
  /** @deprecated use `FindApiEndpointResponse$inboundSchema` instead. */
  export const inboundSchema = FindApiEndpointResponse$inboundSchema;
  /** @deprecated use `FindApiEndpointResponse$outboundSchema` instead. */
  export const outboundSchema = FindApiEndpointResponse$outboundSchema;
  /** @deprecated use `FindApiEndpointResponse$Outbound` instead. */
  export type Outbound = FindApiEndpointResponse$Outbound;
}
