/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../../../sdk/models/shared";
import { AxiosResponse } from "axios";

export class GetWorkspaceTargetsRequest extends SpeakeasyBase {
    /**
     * Filter to only return targets with events created after this timestamp
     */
    @SpeakeasyMetadata({
        data: "queryParam, style=form;explode=true;name=after_last_event_created_at",
    })
    afterLastEventCreatedAt?: Date;

    /**
     * Unique identifier of the workspace.
     */
    @SpeakeasyMetadata({ data: "pathParam, style=simple;explode=false;name=workspaceID" })
    workspaceID?: string;
}

export class GetWorkspaceTargetsResponse extends SpeakeasyBase {
    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    @SpeakeasyMetadata()
    error?: shared.ErrorT;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse: AxiosResponse;

    /**
     * Success
     */
    @SpeakeasyMetadata({ elemType: shared.TargetSDK })
    targetSDKList?: shared.TargetSDK[];
}
