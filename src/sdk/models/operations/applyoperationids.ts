/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../../../sdk/models/shared";
import { AxiosResponse } from "axios";
import { Expose } from "class-transformer";

/**
 * Apply options
 */
export class ApplyOperationIDsRequestBody extends SpeakeasyBase {
    /**
     * Whether to apply the suggestions as an overlay or replace the existing operationIDs. Default: false
     */
    @SpeakeasyMetadata()
    @Expose({ name: "as_overlay" })
    asOverlay?: boolean;
}

export class ApplyOperationIDsRequest extends SpeakeasyBase {
    /**
     * Apply options
     */
    @SpeakeasyMetadata({ data: "request, media_type=application/json" })
    requestBody?: ApplyOperationIDsRequestBody;

    @SpeakeasyMetadata({ data: "header, style=simple;explode=false;name=x-session-id" })
    xSessionId: string;
}

export class ApplyOperationIDsResponse extends SpeakeasyBase {
    /**
     * OK
     */
    @SpeakeasyMetadata()
    twoHundredApplicationJsonSchema?: Uint8Array;

    /**
     * OK
     */
    @SpeakeasyMetadata()
    twoHundredApplicationXYamlSchema?: Uint8Array;

    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * Default error response
     */
    @SpeakeasyMetadata()
    error?: shared.ErrorT;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse: AxiosResponse;
}
