/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";

export type SetWorkspaceFeatureFlagsResponse =
  | shared.WorkspaceFeatureFlagResponse
  | shared.ErrorT;

/** @internal */
export const SetWorkspaceFeatureFlagsResponse$inboundSchema: z.ZodType<
  SetWorkspaceFeatureFlagsResponse,
  z.ZodTypeDef,
  unknown
> = z.union([
  shared.WorkspaceFeatureFlagResponse$inboundSchema,
  shared.ErrorT$inboundSchema,
]);

/** @internal */
export type SetWorkspaceFeatureFlagsResponse$Outbound =
  | shared.WorkspaceFeatureFlagResponse$Outbound
  | shared.ErrorT$Outbound;

/** @internal */
export const SetWorkspaceFeatureFlagsResponse$outboundSchema: z.ZodType<
  SetWorkspaceFeatureFlagsResponse$Outbound,
  z.ZodTypeDef,
  SetWorkspaceFeatureFlagsResponse
> = z.union([
  shared.WorkspaceFeatureFlagResponse$outboundSchema,
  shared.ErrorT$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SetWorkspaceFeatureFlagsResponse$ {
  /** @deprecated use `SetWorkspaceFeatureFlagsResponse$inboundSchema` instead. */
  export const inboundSchema = SetWorkspaceFeatureFlagsResponse$inboundSchema;
  /** @deprecated use `SetWorkspaceFeatureFlagsResponse$outboundSchema` instead. */
  export const outboundSchema = SetWorkspaceFeatureFlagsResponse$outboundSchema;
  /** @deprecated use `SetWorkspaceFeatureFlagsResponse$Outbound` instead. */
  export type Outbound = SetWorkspaceFeatureFlagsResponse$Outbound;
}

export function setWorkspaceFeatureFlagsResponseToJSON(
  setWorkspaceFeatureFlagsResponse: SetWorkspaceFeatureFlagsResponse,
): string {
  return JSON.stringify(
    SetWorkspaceFeatureFlagsResponse$outboundSchema.parse(
      setWorkspaceFeatureFlagsResponse,
    ),
  );
}

export function setWorkspaceFeatureFlagsResponseFromJSON(
  jsonString: string,
): SafeParseResult<SetWorkspaceFeatureFlagsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => SetWorkspaceFeatureFlagsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'SetWorkspaceFeatureFlagsResponse' from JSON`,
  );
}
