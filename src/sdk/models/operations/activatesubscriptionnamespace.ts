/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type ActivateSubscriptionNamespaceRequest = {
  /**
   * The existing subscription ID
   */
  subscriptionID: string;
  /**
   * The namespace name
   */
  namespaceName: string;
};

/** @internal */
export const ActivateSubscriptionNamespaceRequest$inboundSchema: z.ZodType<
  ActivateSubscriptionNamespaceRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  subscriptionID: z.string(),
  namespaceName: z.string(),
});

/** @internal */
export type ActivateSubscriptionNamespaceRequest$Outbound = {
  subscriptionID: string;
  namespaceName: string;
};

/** @internal */
export const ActivateSubscriptionNamespaceRequest$outboundSchema: z.ZodType<
  ActivateSubscriptionNamespaceRequest$Outbound,
  z.ZodTypeDef,
  ActivateSubscriptionNamespaceRequest
> = z.object({
  subscriptionID: z.string(),
  namespaceName: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ActivateSubscriptionNamespaceRequest$ {
  /** @deprecated use `ActivateSubscriptionNamespaceRequest$inboundSchema` instead. */
  export const inboundSchema =
    ActivateSubscriptionNamespaceRequest$inboundSchema;
  /** @deprecated use `ActivateSubscriptionNamespaceRequest$outboundSchema` instead. */
  export const outboundSchema =
    ActivateSubscriptionNamespaceRequest$outboundSchema;
  /** @deprecated use `ActivateSubscriptionNamespaceRequest$Outbound` instead. */
  export type Outbound = ActivateSubscriptionNamespaceRequest$Outbound;
}
