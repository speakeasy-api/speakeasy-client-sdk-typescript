/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import * as shared from "../shared/index.js";

export type GetValidEmbedAccessTokensResponse =
  | shared.ErrorT
  | Array<shared.EmbedToken>;

/** @internal */
export const GetValidEmbedAccessTokensResponse$inboundSchema: z.ZodType<
  GetValidEmbedAccessTokensResponse,
  z.ZodTypeDef,
  unknown
> = z.union([
  shared.ErrorT$inboundSchema,
  z.array(shared.EmbedToken$inboundSchema),
]);

/** @internal */
export type GetValidEmbedAccessTokensResponse$Outbound =
  | shared.ErrorT$Outbound
  | Array<shared.EmbedToken$Outbound>;

/** @internal */
export const GetValidEmbedAccessTokensResponse$outboundSchema: z.ZodType<
  GetValidEmbedAccessTokensResponse$Outbound,
  z.ZodTypeDef,
  GetValidEmbedAccessTokensResponse
> = z.union([
  shared.ErrorT$outboundSchema,
  z.array(shared.EmbedToken$outboundSchema),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetValidEmbedAccessTokensResponse$ {
  /** @deprecated use `GetValidEmbedAccessTokensResponse$inboundSchema` instead. */
  export const inboundSchema = GetValidEmbedAccessTokensResponse$inboundSchema;
  /** @deprecated use `GetValidEmbedAccessTokensResponse$outboundSchema` instead. */
  export const outboundSchema =
    GetValidEmbedAccessTokensResponse$outboundSchema;
  /** @deprecated use `GetValidEmbedAccessTokensResponse$Outbound` instead. */
  export type Outbound = GetValidEmbedAccessTokensResponse$Outbound;
}
