/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";

export type GetWorkspaceRequest = {
  /**
   * Unique identifier of the workspace.
   */
  workspaceId: string;
};

export type GetWorkspaceResponse = shared.ErrorT | shared.Workspace;

/** @internal */
export const GetWorkspaceRequest$inboundSchema: z.ZodType<
  GetWorkspaceRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  workspace_id: z.string(),
}).transform((v) => {
  return remap$(v, {
    "workspace_id": "workspaceId",
  });
});

/** @internal */
export type GetWorkspaceRequest$Outbound = {
  workspace_id: string;
};

/** @internal */
export const GetWorkspaceRequest$outboundSchema: z.ZodType<
  GetWorkspaceRequest$Outbound,
  z.ZodTypeDef,
  GetWorkspaceRequest
> = z.object({
  workspaceId: z.string(),
}).transform((v) => {
  return remap$(v, {
    workspaceId: "workspace_id",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetWorkspaceRequest$ {
  /** @deprecated use `GetWorkspaceRequest$inboundSchema` instead. */
  export const inboundSchema = GetWorkspaceRequest$inboundSchema;
  /** @deprecated use `GetWorkspaceRequest$outboundSchema` instead. */
  export const outboundSchema = GetWorkspaceRequest$outboundSchema;
  /** @deprecated use `GetWorkspaceRequest$Outbound` instead. */
  export type Outbound = GetWorkspaceRequest$Outbound;
}

/** @internal */
export const GetWorkspaceResponse$inboundSchema: z.ZodType<
  GetWorkspaceResponse,
  z.ZodTypeDef,
  unknown
> = z.union([shared.ErrorT$inboundSchema, shared.Workspace$inboundSchema]);

/** @internal */
export type GetWorkspaceResponse$Outbound =
  | shared.ErrorT$Outbound
  | shared.Workspace$Outbound;

/** @internal */
export const GetWorkspaceResponse$outboundSchema: z.ZodType<
  GetWorkspaceResponse$Outbound,
  z.ZodTypeDef,
  GetWorkspaceResponse
> = z.union([shared.ErrorT$outboundSchema, shared.Workspace$outboundSchema]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetWorkspaceResponse$ {
  /** @deprecated use `GetWorkspaceResponse$inboundSchema` instead. */
  export const inboundSchema = GetWorkspaceResponse$inboundSchema;
  /** @deprecated use `GetWorkspaceResponse$outboundSchema` instead. */
  export const outboundSchema = GetWorkspaceResponse$outboundSchema;
  /** @deprecated use `GetWorkspaceResponse$Outbound` instead. */
  export type Outbound = GetWorkspaceResponse$Outbound;
}
