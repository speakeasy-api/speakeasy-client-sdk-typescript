/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import * as shared from "../../../sdk/models/shared";
import { AxiosResponse } from "axios";

export class GetWorkspaceAccessRequest extends SpeakeasyBase {
    /**
     * Unique identifier of the generation target.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=genLockId" })
    genLockId?: string;

    /**
     * Skip side-effects like incrementing metrics.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=passive" })
    passive?: boolean;

    /**
     * The type of the generated target.
     */
    @SpeakeasyMetadata({ data: "queryParam, style=form;explode=true;name=targetType" })
    targetType?: string;
}

export class GetWorkspaceAccessResponse extends SpeakeasyBase {
    /**
     * OK
     */
    @SpeakeasyMetadata()
    accessDetails?: shared.AccessDetails;

    /**
     * HTTP response content type for this operation
     */
    @SpeakeasyMetadata()
    contentType: string;

    /**
     * HTTP response status code for this operation
     */
    @SpeakeasyMetadata()
    statusCode: number;

    /**
     * Raw HTTP response; suitable for custom response parsing
     */
    @SpeakeasyMetadata()
    rawResponse: AxiosResponse;
}
