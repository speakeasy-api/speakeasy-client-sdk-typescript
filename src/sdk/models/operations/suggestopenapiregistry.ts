/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";

export type SuggestOpenAPIRegistryRequest = {
  xSessionId: string;
  namespaceName: string;
  /**
   * Tag or digest
   */
  revisionReference: string;
  /**
   * Suggest options
   */
  suggestRequestBody?: shared.SuggestRequestBody | undefined;
};

/** @internal */
export const SuggestOpenAPIRegistryRequest$inboundSchema: z.ZodType<
  SuggestOpenAPIRegistryRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  "x-session-id": z.string(),
  namespace_name: z.string(),
  revision_reference: z.string(),
  SuggestRequestBody: shared.SuggestRequestBody$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "x-session-id": "xSessionId",
    "namespace_name": "namespaceName",
    "revision_reference": "revisionReference",
    "SuggestRequestBody": "suggestRequestBody",
  });
});

/** @internal */
export type SuggestOpenAPIRegistryRequest$Outbound = {
  "x-session-id": string;
  namespace_name: string;
  revision_reference: string;
  SuggestRequestBody?: shared.SuggestRequestBody$Outbound | undefined;
};

/** @internal */
export const SuggestOpenAPIRegistryRequest$outboundSchema: z.ZodType<
  SuggestOpenAPIRegistryRequest$Outbound,
  z.ZodTypeDef,
  SuggestOpenAPIRegistryRequest
> = z.object({
  xSessionId: z.string(),
  namespaceName: z.string(),
  revisionReference: z.string(),
  suggestRequestBody: shared.SuggestRequestBody$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    xSessionId: "x-session-id",
    namespaceName: "namespace_name",
    revisionReference: "revision_reference",
    suggestRequestBody: "SuggestRequestBody",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace SuggestOpenAPIRegistryRequest$ {
  /** @deprecated use `SuggestOpenAPIRegistryRequest$inboundSchema` instead. */
  export const inboundSchema = SuggestOpenAPIRegistryRequest$inboundSchema;
  /** @deprecated use `SuggestOpenAPIRegistryRequest$outboundSchema` instead. */
  export const outboundSchema = SuggestOpenAPIRegistryRequest$outboundSchema;
  /** @deprecated use `SuggestOpenAPIRegistryRequest$Outbound` instead. */
  export type Outbound = SuggestOpenAPIRegistryRequest$Outbound;
}
