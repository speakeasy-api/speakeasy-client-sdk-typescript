/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";

export type CreateBillingAddOnsResponse =
  | shared.OrganizationBillingAddOnResponse
  | shared.ErrorT;

/** @internal */
export const CreateBillingAddOnsResponse$inboundSchema: z.ZodType<
  CreateBillingAddOnsResponse,
  z.ZodTypeDef,
  unknown
> = z.union([
  shared.OrganizationBillingAddOnResponse$inboundSchema,
  shared.ErrorT$inboundSchema,
]);

/** @internal */
export type CreateBillingAddOnsResponse$Outbound =
  | shared.OrganizationBillingAddOnResponse$Outbound
  | shared.ErrorT$Outbound;

/** @internal */
export const CreateBillingAddOnsResponse$outboundSchema: z.ZodType<
  CreateBillingAddOnsResponse$Outbound,
  z.ZodTypeDef,
  CreateBillingAddOnsResponse
> = z.union([
  shared.OrganizationBillingAddOnResponse$outboundSchema,
  shared.ErrorT$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CreateBillingAddOnsResponse$ {
  /** @deprecated use `CreateBillingAddOnsResponse$inboundSchema` instead. */
  export const inboundSchema = CreateBillingAddOnsResponse$inboundSchema;
  /** @deprecated use `CreateBillingAddOnsResponse$outboundSchema` instead. */
  export const outboundSchema = CreateBillingAddOnsResponse$outboundSchema;
  /** @deprecated use `CreateBillingAddOnsResponse$Outbound` instead. */
  export type Outbound = CreateBillingAddOnsResponse$Outbound;
}

export function createBillingAddOnsResponseToJSON(
  createBillingAddOnsResponse: CreateBillingAddOnsResponse,
): string {
  return JSON.stringify(
    CreateBillingAddOnsResponse$outboundSchema.parse(
      createBillingAddOnsResponse,
    ),
  );
}

export function createBillingAddOnsResponseFromJSON(
  jsonString: string,
): SafeParseResult<CreateBillingAddOnsResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => CreateBillingAddOnsResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'CreateBillingAddOnsResponse' from JSON`,
  );
}
