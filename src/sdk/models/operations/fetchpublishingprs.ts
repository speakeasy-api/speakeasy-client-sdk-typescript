/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as shared from "../shared/index.js";
import * as z from "zod";

export type FetchPublishingPRsRequest = {
    generateGenLockId: string;
    org: string;
    repo: string;
};

export type FetchPublishingPRsResponse = shared.ErrorT | shared.GithubPublishingPRResponse;

/** @internal */
export const FetchPublishingPRsRequest$inboundSchema: z.ZodType<
    FetchPublishingPRsRequest,
    z.ZodTypeDef,
    unknown
> = z
    .object({
        generate_gen_lock_id: z.string(),
        org: z.string(),
        repo: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            generate_gen_lock_id: "generateGenLockId",
        });
    });

/** @internal */
export type FetchPublishingPRsRequest$Outbound = {
    generate_gen_lock_id: string;
    org: string;
    repo: string;
};

/** @internal */
export const FetchPublishingPRsRequest$outboundSchema: z.ZodType<
    FetchPublishingPRsRequest$Outbound,
    z.ZodTypeDef,
    FetchPublishingPRsRequest
> = z
    .object({
        generateGenLockId: z.string(),
        org: z.string(),
        repo: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            generateGenLockId: "generate_gen_lock_id",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FetchPublishingPRsRequest$ {
    /** @deprecated use `FetchPublishingPRsRequest$inboundSchema` instead. */
    export const inboundSchema = FetchPublishingPRsRequest$inboundSchema;
    /** @deprecated use `FetchPublishingPRsRequest$outboundSchema` instead. */
    export const outboundSchema = FetchPublishingPRsRequest$outboundSchema;
    /** @deprecated use `FetchPublishingPRsRequest$Outbound` instead. */
    export type Outbound = FetchPublishingPRsRequest$Outbound;
}

/** @internal */
export const FetchPublishingPRsResponse$inboundSchema: z.ZodType<
    FetchPublishingPRsResponse,
    z.ZodTypeDef,
    unknown
> = z.union([shared.ErrorT$inboundSchema, shared.GithubPublishingPRResponse$inboundSchema]);

/** @internal */
export type FetchPublishingPRsResponse$Outbound =
    | shared.ErrorT$Outbound
    | shared.GithubPublishingPRResponse$Outbound;

/** @internal */
export const FetchPublishingPRsResponse$outboundSchema: z.ZodType<
    FetchPublishingPRsResponse$Outbound,
    z.ZodTypeDef,
    FetchPublishingPRsResponse
> = z.union([shared.ErrorT$outboundSchema, shared.GithubPublishingPRResponse$outboundSchema]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FetchPublishingPRsResponse$ {
    /** @deprecated use `FetchPublishingPRsResponse$inboundSchema` instead. */
    export const inboundSchema = FetchPublishingPRsResponse$inboundSchema;
    /** @deprecated use `FetchPublishingPRsResponse$outboundSchema` instead. */
    export const outboundSchema = FetchPublishingPRsResponse$outboundSchema;
    /** @deprecated use `FetchPublishingPRsResponse$Outbound` instead. */
    export type Outbound = FetchPublishingPRsResponse$Outbound;
}
