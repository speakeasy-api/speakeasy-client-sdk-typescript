/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import { safeParse } from "../../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as shared from "../shared/index.js";

export type DeleteBillingAddOnRequest = {
  /**
   * The specific add-on to delete.
   */
  addOn: shared.BillingAddOn;
};

/** @internal */
export const DeleteBillingAddOnRequest$inboundSchema: z.ZodType<
  DeleteBillingAddOnRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  add_on: shared.BillingAddOn$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "add_on": "addOn",
  });
});

/** @internal */
export type DeleteBillingAddOnRequest$Outbound = {
  add_on: string;
};

/** @internal */
export const DeleteBillingAddOnRequest$outboundSchema: z.ZodType<
  DeleteBillingAddOnRequest$Outbound,
  z.ZodTypeDef,
  DeleteBillingAddOnRequest
> = z.object({
  addOn: shared.BillingAddOn$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    addOn: "add_on",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DeleteBillingAddOnRequest$ {
  /** @deprecated use `DeleteBillingAddOnRequest$inboundSchema` instead. */
  export const inboundSchema = DeleteBillingAddOnRequest$inboundSchema;
  /** @deprecated use `DeleteBillingAddOnRequest$outboundSchema` instead. */
  export const outboundSchema = DeleteBillingAddOnRequest$outboundSchema;
  /** @deprecated use `DeleteBillingAddOnRequest$Outbound` instead. */
  export type Outbound = DeleteBillingAddOnRequest$Outbound;
}

export function deleteBillingAddOnRequestToJSON(
  deleteBillingAddOnRequest: DeleteBillingAddOnRequest,
): string {
  return JSON.stringify(
    DeleteBillingAddOnRequest$outboundSchema.parse(deleteBillingAddOnRequest),
  );
}

export function deleteBillingAddOnRequestFromJSON(
  jsonString: string,
): SafeParseResult<DeleteBillingAddOnRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DeleteBillingAddOnRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DeleteBillingAddOnRequest' from JSON`,
  );
}
