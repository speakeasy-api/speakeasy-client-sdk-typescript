/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type CheckAccessRequest = {
    org: string;
    repo: string;
};

/** @internal */
export const CheckAccessRequest$inboundSchema: z.ZodType<
    CheckAccessRequest,
    z.ZodTypeDef,
    unknown
> = z.object({
    org: z.string(),
    repo: z.string(),
});

/** @internal */
export type CheckAccessRequest$Outbound = {
    org: string;
    repo: string;
};

/** @internal */
export const CheckAccessRequest$outboundSchema: z.ZodType<
    CheckAccessRequest$Outbound,
    z.ZodTypeDef,
    CheckAccessRequest
> = z.object({
    org: z.string(),
    repo: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace CheckAccessRequest$ {
    /** @deprecated use `CheckAccessRequest$inboundSchema` instead. */
    export const inboundSchema = CheckAccessRequest$inboundSchema;
    /** @deprecated use `CheckAccessRequest$outboundSchema` instead. */
    export const outboundSchema = CheckAccessRequest$outboundSchema;
    /** @deprecated use `CheckAccessRequest$Outbound` instead. */
    export type Outbound = CheckAccessRequest$Outbound;
}
