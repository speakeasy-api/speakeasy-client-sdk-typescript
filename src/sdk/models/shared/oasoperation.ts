/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import * as z from "zod";

export type OASOperation = {
    description: string;
    method: string;
    operationId: string;
    path: string;
    tags: Array<string>;
};

/** @internal */
export const OASOperation$inboundSchema: z.ZodType<OASOperation, z.ZodTypeDef, unknown> = z
    .object({
        description: z.string(),
        method: z.string(),
        operation_id: z.string(),
        path: z.string(),
        tags: z.array(z.string()),
    })
    .transform((v) => {
        return remap$(v, {
            operation_id: "operationId",
        });
    });

/** @internal */
export type OASOperation$Outbound = {
    description: string;
    method: string;
    operation_id: string;
    path: string;
    tags: Array<string>;
};

/** @internal */
export const OASOperation$outboundSchema: z.ZodType<
    OASOperation$Outbound,
    z.ZodTypeDef,
    OASOperation
> = z
    .object({
        description: z.string(),
        method: z.string(),
        operationId: z.string(),
        path: z.string(),
        tags: z.array(z.string()),
    })
    .transform((v) => {
        return remap$(v, {
            operationId: "operation_id",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace OASOperation$ {
    /** @deprecated use `OASOperation$inboundSchema` instead. */
    export const inboundSchema = OASOperation$inboundSchema;
    /** @deprecated use `OASOperation$outboundSchema` instead. */
    export const outboundSchema = OASOperation$outboundSchema;
    /** @deprecated use `OASOperation$Outbound` instead. */
    export type Outbound = OASOperation$Outbound;
}
