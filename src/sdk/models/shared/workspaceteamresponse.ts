/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";
import {
  SSOMetadata,
  SSOMetadata$inboundSchema,
  SSOMetadata$Outbound,
  SSOMetadata$outboundSchema,
} from "./ssometadata.js";
import {
  User,
  User$inboundSchema,
  User$Outbound,
  User$outboundSchema,
} from "./user.js";

/**
 * Workspace team response
 */
export type WorkspaceTeamResponse = {
  /**
   * SSO metadata for a workspace
   */
  ssoMetadata?: SSOMetadata | undefined;
  users: Array<User>;
};

/** @internal */
export const WorkspaceTeamResponse$inboundSchema: z.ZodType<
  WorkspaceTeamResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  sso_metadata: SSOMetadata$inboundSchema.optional(),
  users: z.array(User$inboundSchema),
}).transform((v) => {
  return remap$(v, {
    "sso_metadata": "ssoMetadata",
  });
});

/** @internal */
export type WorkspaceTeamResponse$Outbound = {
  sso_metadata?: SSOMetadata$Outbound | undefined;
  users: Array<User$Outbound>;
};

/** @internal */
export const WorkspaceTeamResponse$outboundSchema: z.ZodType<
  WorkspaceTeamResponse$Outbound,
  z.ZodTypeDef,
  WorkspaceTeamResponse
> = z.object({
  ssoMetadata: SSOMetadata$outboundSchema.optional(),
  users: z.array(User$outboundSchema),
}).transform((v) => {
  return remap$(v, {
    ssoMetadata: "sso_metadata",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WorkspaceTeamResponse$ {
  /** @deprecated use `WorkspaceTeamResponse$inboundSchema` instead. */
  export const inboundSchema = WorkspaceTeamResponse$inboundSchema;
  /** @deprecated use `WorkspaceTeamResponse$outboundSchema` instead. */
  export const outboundSchema = WorkspaceTeamResponse$outboundSchema;
  /** @deprecated use `WorkspaceTeamResponse$Outbound` instead. */
  export type Outbound = WorkspaceTeamResponse$Outbound;
}
