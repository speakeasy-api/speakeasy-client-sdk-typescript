/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  catchUnrecognizedEnum,
  OpenEnum,
  Unrecognized,
} from "../../types/enums.js";

/**
 * enum value workspace feature flag
 */
export const WorkspaceFeatureFlag = {
  SchemaRegistry: "schema_registry",
  ChangesReport: "changes_report",
  SkipSchemaRegistry: "skip_schema_registry",
  Webhooks: "webhooks",
} as const;
/**
 * enum value workspace feature flag
 */
export type WorkspaceFeatureFlag = OpenEnum<typeof WorkspaceFeatureFlag>;

/** @internal */
export const WorkspaceFeatureFlag$inboundSchema: z.ZodType<
  WorkspaceFeatureFlag,
  z.ZodTypeDef,
  unknown
> = z
  .union([
    z.nativeEnum(WorkspaceFeatureFlag),
    z.string().transform(catchUnrecognizedEnum),
  ]);

/** @internal */
export const WorkspaceFeatureFlag$outboundSchema: z.ZodType<
  WorkspaceFeatureFlag,
  z.ZodTypeDef,
  WorkspaceFeatureFlag
> = z.union([
  z.nativeEnum(WorkspaceFeatureFlag),
  z.string().and(z.custom<Unrecognized<string>>()),
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WorkspaceFeatureFlag$ {
  /** @deprecated use `WorkspaceFeatureFlag$inboundSchema` instead. */
  export const inboundSchema = WorkspaceFeatureFlag$inboundSchema;
  /** @deprecated use `WorkspaceFeatureFlag$outboundSchema` instead. */
  export const outboundSchema = WorkspaceFeatureFlag$outboundSchema;
}
