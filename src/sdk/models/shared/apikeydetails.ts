/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { FeatureFlag } from "./featureflag";
import { Expose, Type } from "class-transformer";

export enum AccountType {
    Free = "free",
    ScaleUp = "scale-up",
    Enterprise = "enterprise",
}

export class ApiKeyDetails extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "account_type" })
    accountType: AccountType;

    @SpeakeasyMetadata({ elemType: FeatureFlag })
    @Expose({ name: "enabled_features" })
    @Type(() => FeatureFlag)
    enabledFeatures: FeatureFlag[];

    /**
     * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    @SpeakeasyMetadata()
    @Expose({ name: "feature_flags" })
    featureFlags?: string[];

    @SpeakeasyMetadata()
    @Expose({ name: "generation_access_unlimited" })
    generationAccessUnlimited?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "org_slug" })
    orgSlug: string;

    @SpeakeasyMetadata()
    @Expose({ name: "workspace_id" })
    workspaceId: string;

    @SpeakeasyMetadata()
    @Expose({ name: "workspace_slug" })
    workspaceSlug: string;
}
