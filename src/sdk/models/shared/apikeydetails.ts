/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { remap as remap$ } from "../../../lib/primitives.js";
import { ClosedEnum } from "../../types/enums.js";
import * as z from "zod";

export const AccountType = {
    Free: "free",
    ScaleUp: "scale-up",
    Enterprise: "enterprise",
} as const;
export type AccountType = ClosedEnum<typeof AccountType>;

export type ApiKeyDetails = {
    accountType: AccountType;
    enabledFeatures: Array<string>;
    /**
     * @deprecated field: This will be removed in a future release, please migrate away from it as soon as possible.
     */
    featureFlags?: Array<string> | undefined;
    generationAccessUnlimited?: boolean | undefined;
    orgSlug: string;
    telemetryDisabled: boolean;
    workspaceId: string;
    workspaceSlug: string;
};

/** @internal */
export const AccountType$inboundSchema: z.ZodNativeEnum<typeof AccountType> =
    z.nativeEnum(AccountType);

/** @internal */
export const AccountType$outboundSchema: z.ZodNativeEnum<typeof AccountType> =
    AccountType$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AccountType$ {
    /** @deprecated use `AccountType$inboundSchema` instead. */
    export const inboundSchema = AccountType$inboundSchema;
    /** @deprecated use `AccountType$outboundSchema` instead. */
    export const outboundSchema = AccountType$outboundSchema;
}

/** @internal */
export const ApiKeyDetails$inboundSchema: z.ZodType<ApiKeyDetails, z.ZodTypeDef, unknown> = z
    .object({
        account_type: AccountType$inboundSchema,
        enabled_features: z.array(z.string()),
        feature_flags: z.array(z.string()).optional(),
        generation_access_unlimited: z.boolean().optional(),
        org_slug: z.string(),
        telemetry_disabled: z.boolean(),
        workspace_id: z.string(),
        workspace_slug: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            account_type: "accountType",
            enabled_features: "enabledFeatures",
            feature_flags: "featureFlags",
            generation_access_unlimited: "generationAccessUnlimited",
            org_slug: "orgSlug",
            telemetry_disabled: "telemetryDisabled",
            workspace_id: "workspaceId",
            workspace_slug: "workspaceSlug",
        });
    });

/** @internal */
export type ApiKeyDetails$Outbound = {
    account_type: string;
    enabled_features: Array<string>;
    feature_flags?: Array<string> | undefined;
    generation_access_unlimited?: boolean | undefined;
    org_slug: string;
    telemetry_disabled: boolean;
    workspace_id: string;
    workspace_slug: string;
};

/** @internal */
export const ApiKeyDetails$outboundSchema: z.ZodType<
    ApiKeyDetails$Outbound,
    z.ZodTypeDef,
    ApiKeyDetails
> = z
    .object({
        accountType: AccountType$outboundSchema,
        enabledFeatures: z.array(z.string()),
        featureFlags: z.array(z.string()).optional(),
        generationAccessUnlimited: z.boolean().optional(),
        orgSlug: z.string(),
        telemetryDisabled: z.boolean(),
        workspaceId: z.string(),
        workspaceSlug: z.string(),
    })
    .transform((v) => {
        return remap$(v, {
            accountType: "account_type",
            enabledFeatures: "enabled_features",
            featureFlags: "feature_flags",
            generationAccessUnlimited: "generation_access_unlimited",
            orgSlug: "org_slug",
            telemetryDisabled: "telemetry_disabled",
            workspaceId: "workspace_id",
            workspaceSlug: "workspace_slug",
        });
    });

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ApiKeyDetails$ {
    /** @deprecated use `ApiKeyDetails$inboundSchema` instead. */
    export const inboundSchema = ApiKeyDetails$inboundSchema;
    /** @deprecated use `ApiKeyDetails$outboundSchema` instead. */
    export const outboundSchema = ApiKeyDetails$outboundSchema;
    /** @deprecated use `ApiKeyDetails$Outbound` instead. */
    export type Outbound = ApiKeyDetails$Outbound;
}
