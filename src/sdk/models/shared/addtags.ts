/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";

/**
 * Request body of tags to add to a revision
 */
export type AddTags = {
  /**
   * revision digest to add tags too sha256:...
   */
  revisionDigest: string;
  /**
   * string tags to add to the revision
   */
  tags: Array<string>;
};

/** @internal */
export const AddTags$inboundSchema: z.ZodType<AddTags, z.ZodTypeDef, unknown> =
  z.object({
    revision_digest: z.string(),
    tags: z.array(z.string()),
  }).transform((v) => {
    return remap$(v, {
      "revision_digest": "revisionDigest",
    });
  });

/** @internal */
export type AddTags$Outbound = {
  revision_digest: string;
  tags: Array<string>;
};

/** @internal */
export const AddTags$outboundSchema: z.ZodType<
  AddTags$Outbound,
  z.ZodTypeDef,
  AddTags
> = z.object({
  revisionDigest: z.string(),
  tags: z.array(z.string()),
}).transform((v) => {
  return remap$(v, {
    revisionDigest: "revision_digest",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace AddTags$ {
  /** @deprecated use `AddTags$inboundSchema` instead. */
  export const inboundSchema = AddTags$inboundSchema;
  /** @deprecated use `AddTags$outboundSchema` instead. */
  export const outboundSchema = AddTags$outboundSchema;
  /** @deprecated use `AddTags$Outbound` instead. */
  export type Outbound = AddTags$Outbound;
}
