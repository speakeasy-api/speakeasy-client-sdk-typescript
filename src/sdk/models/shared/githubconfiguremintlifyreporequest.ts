/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * A request to configure a GitHub repository for mintlify
 */
export type GithubConfigureMintlifyRepoRequest = {
  /**
   * The input OpenAPI document
   */
  input: string;
  /**
   * The GitHub organization name
   */
  org: string;
  /**
   * The overlays to apply
   */
  overlays: Array<string>;
  /**
   * The GitHub repository name
   */
  repo: string;
  /**
   * The subdirectory (location of mint.json)
   */
  subdirectory?: string | undefined;
};

/** @internal */
export const GithubConfigureMintlifyRepoRequest$inboundSchema: z.ZodType<
  GithubConfigureMintlifyRepoRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  input: z.string(),
  org: z.string(),
  overlays: z.array(z.string()),
  repo: z.string(),
  subdirectory: z.string().optional(),
});

/** @internal */
export type GithubConfigureMintlifyRepoRequest$Outbound = {
  input: string;
  org: string;
  overlays: Array<string>;
  repo: string;
  subdirectory?: string | undefined;
};

/** @internal */
export const GithubConfigureMintlifyRepoRequest$outboundSchema: z.ZodType<
  GithubConfigureMintlifyRepoRequest$Outbound,
  z.ZodTypeDef,
  GithubConfigureMintlifyRepoRequest
> = z.object({
  input: z.string(),
  org: z.string(),
  overlays: z.array(z.string()),
  repo: z.string(),
  subdirectory: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GithubConfigureMintlifyRepoRequest$ {
  /** @deprecated use `GithubConfigureMintlifyRepoRequest$inboundSchema` instead. */
  export const inboundSchema = GithubConfigureMintlifyRepoRequest$inboundSchema;
  /** @deprecated use `GithubConfigureMintlifyRepoRequest$outboundSchema` instead. */
  export const outboundSchema =
    GithubConfigureMintlifyRepoRequest$outboundSchema;
  /** @deprecated use `GithubConfigureMintlifyRepoRequest$Outbound` instead. */
  export type Outbound = GithubConfigureMintlifyRepoRequest$Outbound;
}
