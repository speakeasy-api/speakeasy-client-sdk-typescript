/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";

/**
 * A request to configure a GitHub target
 */
export type GithubConfigureTargetRequest = {
  /**
   * The GitHub organization name
   */
  org: string;
  /**
   * The GitHub repository name
   */
  repoName: string;
};

/** @internal */
export const GithubConfigureTargetRequest$inboundSchema: z.ZodType<
  GithubConfigureTargetRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  org: z.string(),
  repo_name: z.string(),
}).transform((v) => {
  return remap$(v, {
    "repo_name": "repoName",
  });
});

/** @internal */
export type GithubConfigureTargetRequest$Outbound = {
  org: string;
  repo_name: string;
};

/** @internal */
export const GithubConfigureTargetRequest$outboundSchema: z.ZodType<
  GithubConfigureTargetRequest$Outbound,
  z.ZodTypeDef,
  GithubConfigureTargetRequest
> = z.object({
  org: z.string(),
  repoName: z.string(),
}).transform((v) => {
  return remap$(v, {
    repoName: "repo_name",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GithubConfigureTargetRequest$ {
  /** @deprecated use `GithubConfigureTargetRequest$inboundSchema` instead. */
  export const inboundSchema = GithubConfigureTargetRequest$inboundSchema;
  /** @deprecated use `GithubConfigureTargetRequest$outboundSchema` instead. */
  export const outboundSchema = GithubConfigureTargetRequest$outboundSchema;
  /** @deprecated use `GithubConfigureTargetRequest$Outbound` instead. */
  export type Outbound = GithubConfigureTargetRequest$Outbound;
}
