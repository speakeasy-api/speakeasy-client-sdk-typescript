/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SpeakeasyBase, SpeakeasyMetadata } from "../../../internal/utils";
import { Expose, Transform, Type } from "class-transformer";

export class Claims extends SpeakeasyBase {}

export class User extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "admin" })
    admin?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "created_at" })
    @Transform(({ value }) => new Date(value), { toClassOnly: true })
    createdAt?: Date;

    @SpeakeasyMetadata()
    @Expose({ name: "display_name" })
    displayName?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "email" })
    email?: string;

    @SpeakeasyMetadata()
    @Expose({ name: "email_verified" })
    emailVerified?: boolean;

    @SpeakeasyMetadata()
    @Expose({ name: "id" })
    id?: string;
}

export class Workspaces extends SpeakeasyBase {}

/**
 * An AccessToken is a token that can be used to authenticate with the Speakeasy API.
 */
export class AccessToken extends SpeakeasyBase {
    @SpeakeasyMetadata()
    @Expose({ name: "access_token" })
    accessToken: string;

    @SpeakeasyMetadata()
    @Expose({ name: "claims" })
    @Type(() => Claims)
    claims: Claims;

    @SpeakeasyMetadata()
    @Expose({ name: "user" })
    @Type(() => User)
    user: User;

    @SpeakeasyMetadata({ elemType: Workspaces })
    @Expose({ name: "workspaces" })
    @Type(() => Workspaces)
    workspaces?: Workspaces[];
}
