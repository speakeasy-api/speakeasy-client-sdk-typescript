/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";

/**
 * An EmbedAccessTokenResponse contains a token that can be used to embed a Speakeasy dashboard.
 */
export type EmbedAccessTokenResponse = {
  accessToken: string;
};

/** @internal */
export const EmbedAccessTokenResponse$inboundSchema: z.ZodType<
  EmbedAccessTokenResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  access_token: z.string(),
}).transform((v) => {
  return remap$(v, {
    "access_token": "accessToken",
  });
});

/** @internal */
export type EmbedAccessTokenResponse$Outbound = {
  access_token: string;
};

/** @internal */
export const EmbedAccessTokenResponse$outboundSchema: z.ZodType<
  EmbedAccessTokenResponse$Outbound,
  z.ZodTypeDef,
  EmbedAccessTokenResponse
> = z.object({
  accessToken: z.string(),
}).transform((v) => {
  return remap$(v, {
    accessToken: "access_token",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace EmbedAccessTokenResponse$ {
  /** @deprecated use `EmbedAccessTokenResponse$inboundSchema` instead. */
  export const inboundSchema = EmbedAccessTokenResponse$inboundSchema;
  /** @deprecated use `EmbedAccessTokenResponse$outboundSchema` instead. */
  export const outboundSchema = EmbedAccessTokenResponse$outboundSchema;
  /** @deprecated use `EmbedAccessTokenResponse$Outbound` instead. */
  export type Outbound = EmbedAccessTokenResponse$Outbound;
}
