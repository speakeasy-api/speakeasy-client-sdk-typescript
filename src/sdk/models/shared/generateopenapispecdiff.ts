/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";

export type GenerateOpenApiSpecDiff = {
  currentSchema: string;
  newSchema: string;
};

/** @internal */
export const GenerateOpenApiSpecDiff$inboundSchema: z.ZodType<
  GenerateOpenApiSpecDiff,
  z.ZodTypeDef,
  unknown
> = z.object({
  current_schema: z.string(),
  new_schema: z.string(),
}).transform((v) => {
  return remap$(v, {
    "current_schema": "currentSchema",
    "new_schema": "newSchema",
  });
});

/** @internal */
export type GenerateOpenApiSpecDiff$Outbound = {
  current_schema: string;
  new_schema: string;
};

/** @internal */
export const GenerateOpenApiSpecDiff$outboundSchema: z.ZodType<
  GenerateOpenApiSpecDiff$Outbound,
  z.ZodTypeDef,
  GenerateOpenApiSpecDiff
> = z.object({
  currentSchema: z.string(),
  newSchema: z.string(),
}).transform((v) => {
  return remap$(v, {
    currentSchema: "current_schema",
    newSchema: "new_schema",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GenerateOpenApiSpecDiff$ {
  /** @deprecated use `GenerateOpenApiSpecDiff$inboundSchema` instead. */
  export const inboundSchema = GenerateOpenApiSpecDiff$inboundSchema;
  /** @deprecated use `GenerateOpenApiSpecDiff$outboundSchema` instead. */
  export const outboundSchema = GenerateOpenApiSpecDiff$outboundSchema;
  /** @deprecated use `GenerateOpenApiSpecDiff$Outbound` instead. */
  export type Outbound = GenerateOpenApiSpecDiff$Outbound;
}
