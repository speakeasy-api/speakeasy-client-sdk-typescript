/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import {
  Namespace,
  Namespace$inboundSchema,
  Namespace$Outbound,
  Namespace$outboundSchema,
} from "./namespace.js";

export type GetNamespacesResponse = {
  items: Array<Namespace>;
};

/** @internal */
export const GetNamespacesResponse$inboundSchema: z.ZodType<
  GetNamespacesResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  items: z.array(Namespace$inboundSchema),
});

/** @internal */
export type GetNamespacesResponse$Outbound = {
  items: Array<Namespace$Outbound>;
};

/** @internal */
export const GetNamespacesResponse$outboundSchema: z.ZodType<
  GetNamespacesResponse$Outbound,
  z.ZodTypeDef,
  GetNamespacesResponse
> = z.object({
  items: z.array(Namespace$outboundSchema),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetNamespacesResponse$ {
  /** @deprecated use `GetNamespacesResponse$inboundSchema` instead. */
  export const inboundSchema = GetNamespacesResponse$inboundSchema;
  /** @deprecated use `GetNamespacesResponse$outboundSchema` instead. */
  export const outboundSchema = GetNamespacesResponse$outboundSchema;
  /** @deprecated use `GetNamespacesResponse$Outbound` instead. */
  export type Outbound = GetNamespacesResponse$Outbound;
}
