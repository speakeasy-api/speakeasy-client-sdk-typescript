/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type UsageSnippet = {
  /**
   * The code snippet
   */
  code: string;
  /**
   * The language of the snippet
   */
  language: string;
  /**
   * The operation ID for the snippet
   */
  operationId: string;
};

/** @internal */
export const UsageSnippet$inboundSchema: z.ZodType<
  UsageSnippet,
  z.ZodTypeDef,
  unknown
> = z.object({
  code: z.string(),
  language: z.string(),
  operationId: z.string(),
});

/** @internal */
export type UsageSnippet$Outbound = {
  code: string;
  language: string;
  operationId: string;
};

/** @internal */
export const UsageSnippet$outboundSchema: z.ZodType<
  UsageSnippet$Outbound,
  z.ZodTypeDef,
  UsageSnippet
> = z.object({
  code: z.string(),
  language: z.string(),
  operationId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace UsageSnippet$ {
  /** @deprecated use `UsageSnippet$inboundSchema` instead. */
  export const inboundSchema = UsageSnippet$inboundSchema;
  /** @deprecated use `UsageSnippet$outboundSchema` instead. */
  export const outboundSchema = UsageSnippet$outboundSchema;
  /** @deprecated use `UsageSnippet$Outbound` instead. */
  export type Outbound = UsageSnippet$Outbound;
}
