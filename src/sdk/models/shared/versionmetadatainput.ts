/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../../lib/primitives.js";

/**
 * A set of keys and associated values, attached to a particular version of an Api.
 */
export type VersionMetadataInput = {
  /**
   * The key for this metadata.
   */
  metaKey: string;
  /**
   * One of the values for this metadata.
   */
  metaValue: string;
};

/** @internal */
export const VersionMetadataInput$inboundSchema: z.ZodType<
  VersionMetadataInput,
  z.ZodTypeDef,
  unknown
> = z.object({
  meta_key: z.string(),
  meta_value: z.string(),
}).transform((v) => {
  return remap$(v, {
    "meta_key": "metaKey",
    "meta_value": "metaValue",
  });
});

/** @internal */
export type VersionMetadataInput$Outbound = {
  meta_key: string;
  meta_value: string;
};

/** @internal */
export const VersionMetadataInput$outboundSchema: z.ZodType<
  VersionMetadataInput$Outbound,
  z.ZodTypeDef,
  VersionMetadataInput
> = z.object({
  metaKey: z.string(),
  metaValue: z.string(),
}).transform((v) => {
  return remap$(v, {
    metaKey: "meta_key",
    metaValue: "meta_value",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace VersionMetadataInput$ {
  /** @deprecated use `VersionMetadataInput$inboundSchema` instead. */
  export const inboundSchema = VersionMetadataInput$inboundSchema;
  /** @deprecated use `VersionMetadataInput$outboundSchema` instead. */
  export const outboundSchema = VersionMetadataInput$outboundSchema;
  /** @deprecated use `VersionMetadataInput$Outbound` instead. */
  export type Outbound = VersionMetadataInput$Outbound;
}
